{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheapperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x38aefecc5c25a8dfe2e42b2623ba360d8f18e4aabc9328cbed7382d506660587",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1019090",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x88d5dd19a2e8bd066b0f7c59811f7954a03b35ef0dd57b8219edf887c5d03cd1",
    "transactionHash": "0x38aefecc5c25a8dfe2e42b2623ba360d8f18e4aabc9328cbed7382d506660587",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1019090",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "a7869667dda7da0d01a5b069de391d75",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheapperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Fernando Cardozo\",\"details\":\"this implemtns price feed as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"this implemtns price feed as our library\"}},\"title\":\"a contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"this function funds this contract\"}},\"notice\":\"this contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n// Interfaces, libraries here > Style Guide\\n\\n/// @title a contract for crowd funding\\n/// @author Fernando Cardozo\\n/// @notice this contract is to demo a sample funding contract\\n/// @dev this implemtns price feed as our library\\n\\ncontract FundMe {\\n    // Type Declaration\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    uint256 public constant MINIMUN_USD = 50 * 1e18;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    // Events and modifiers\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _; // order that the code of the function modified run. This way the modifier run first.\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // receive()\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    // fallback()\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /// @notice this function funds this contract\\n    /// @dev this implemtns price feed as our library\\n\\n    function fund() public payable {\\n        // the first parameter of a function extending a library is the value calling the method\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUN_USD,\\n            \\\"Didn't send enough!\\\"\\n        ); // 1e18 => 1e18 wei = 1e9 gwei = 1 eth\\n\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            /* this is a comment */ uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        //reset the array\\n        s_funders = new address[](0);\\n\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed!\\\");\\n    }\\n\\n    function cheapperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        //reset the array\\n        s_funders = new address[](0);\\n\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed!\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xf6ed3ad03620685f9aea6aa7726bb9c8187e8ea0781258ccb03da30be180cf97\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // ABI\\n        // Address 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x113248db1465402dcc021398d2b6d3adf623ec3a71ee62bdc9ece09e621403c2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200129138038062001291833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111126200017f6000396000818161033f0152818161057f015261082501526111126000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101215780639e87a5cd1461014c578063b60d428814610177578063d7b4750c146101815761008e565b80630343fb25146100985780632100f479146100d55780633ccfd60b146101005780636c83b06c146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa0565b6102e7565b6040516100cc9190610ae6565b60405180910390f35b3480156100e157600080fd5b506100ea610330565b6040516100f79190610ae6565b60405180910390f35b34801561010c57600080fd5b5061011561033d565b005b61011f61057d565b005b34801561012d57600080fd5b50610136610821565b6040516101439190610b10565b60405180910390f35b34801561015857600080fd5b50610161610849565b60405161016e9190610b8a565b60405180910390f35b61017f6101be565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bd1565b610873565b6040516101b59190610b10565b60405180910390f35b6802b5e3af16b18800006101fd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ba90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c5b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561046d5760008082815481106103e7576103e6610c7b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046590610cd9565b9150506103c5565b50600067ffffffffffffffff81111561048957610488610d22565b5b6040519080825280602002602001820160405280156104b75781602001602082028036833780820191505090505b50600090805190602001906104cd929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f490610d82565b60006040518083038185875af1925050503d8060008114610531576040519150601f19603f3d011682016040523d82523d6000602084013e610536565b606091505b505090508061057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190610de3565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610602576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561068557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161063b575b5050505050905060005b81518110156107105760008282815181106106ad576106ac610c7b565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061070890610cd9565b91505061068f565b50600067ffffffffffffffff81111561072c5761072b610d22565b5b60405190808252806020026020018201604052801561075a5781602001602082028036833780820191505090505b5060009080519060200190610770929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161079790610d82565b60006040518083038185875af1925050503d80600081146107d4576040519150601f19603f3d011682016040523d82523d6000602084013e6107d9565b606091505b505090508061081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081490610de3565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061088857610887610c7b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c6836108f6565b90506000670de0b6b3a764000085836108df9190610e03565b6108e99190610e8c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093f57600080fd5b505afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190610f4a565b5050509150506402540be4008161098e9190610fc5565b915050919050565b828054828255906000526020600020908101928215610a0f579160200282015b82811115610a0e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b6565b5b509050610a1c9190610a20565b5090565b5b80821115610a39576000816000905550600101610a21565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6d82610a42565b9050919050565b610a7d81610a62565b8114610a8857600080fd5b50565b600081359050610a9a81610a74565b92915050565b600060208284031215610ab657610ab5610a3d565b5b6000610ac484828501610a8b565b91505092915050565b6000819050919050565b610ae081610acd565b82525050565b6000602082019050610afb6000830184610ad7565b92915050565b610b0a81610a62565b82525050565b6000602082019050610b256000830184610b01565b92915050565b6000819050919050565b6000610b50610b4b610b4684610a42565b610b2b565b610a42565b9050919050565b6000610b6282610b35565b9050919050565b6000610b7482610b57565b9050919050565b610b8481610b69565b82525050565b6000602082019050610b9f6000830184610b7b565b92915050565b610bae81610acd565b8114610bb957600080fd5b50565b600081359050610bcb81610ba5565b92915050565b600060208284031215610be757610be6610a3d565b5b6000610bf584828501610bbc565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610c45601383610bfe565b9150610c5082610c0f565b602082019050919050565b60006020820190508181036000830152610c7481610c38565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce482610acd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d1757610d16610caa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d6c600083610d51565b9150610d7782610d5c565b600082019050919050565b6000610d8d82610d5f565b9150819050919050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610dcd600c83610bfe565b9150610dd882610d97565b602082019050919050565b60006020820190508181036000830152610dfc81610dc0565b9050919050565b6000610e0e82610acd565b9150610e1983610acd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5257610e51610caa565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e9782610acd565b9150610ea283610acd565b925082610eb257610eb1610e5d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610edc81610ebd565b8114610ee757600080fd5b50565b600081519050610ef981610ed3565b92915050565b6000819050919050565b610f1281610eff565b8114610f1d57600080fd5b50565b600081519050610f2f81610f09565b92915050565b600081519050610f4481610ba5565b92915050565b600080600080600060a08688031215610f6657610f65610a3d565b5b6000610f7488828901610eea565b9550506020610f8588828901610f20565b9450506040610f9688828901610f35565b9350506060610fa788828901610f35565b9250506080610fb888828901610eea565b9150509295509295909350565b6000610fd082610eff565b9150610fdb83610eff565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561101a57611019610caa565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561105757611056610caa565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561109457611093610caa565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110d1576110d0610caa565b5b82820290509291505056fea2646970667358221220628a841a98daf040306dd4f2b957e0a059c0041cda69431df808acfbe05e094564736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101215780639e87a5cd1461014c578063b60d428814610177578063d7b4750c146101815761008e565b80630343fb25146100985780632100f479146100d55780633ccfd60b146101005780636c83b06c146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa0565b6102e7565b6040516100cc9190610ae6565b60405180910390f35b3480156100e157600080fd5b506100ea610330565b6040516100f79190610ae6565b60405180910390f35b34801561010c57600080fd5b5061011561033d565b005b61011f61057d565b005b34801561012d57600080fd5b50610136610821565b6040516101439190610b10565b60405180910390f35b34801561015857600080fd5b50610161610849565b60405161016e9190610b8a565b60405180910390f35b61017f6101be565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bd1565b610873565b6040516101b59190610b10565b60405180910390f35b6802b5e3af16b18800006101fd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ba90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c5b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561046d5760008082815481106103e7576103e6610c7b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046590610cd9565b9150506103c5565b50600067ffffffffffffffff81111561048957610488610d22565b5b6040519080825280602002602001820160405280156104b75781602001602082028036833780820191505090505b50600090805190602001906104cd929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f490610d82565b60006040518083038185875af1925050503d8060008114610531576040519150601f19603f3d011682016040523d82523d6000602084013e610536565b606091505b505090508061057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190610de3565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610602576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561068557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161063b575b5050505050905060005b81518110156107105760008282815181106106ad576106ac610c7b565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061070890610cd9565b91505061068f565b50600067ffffffffffffffff81111561072c5761072b610d22565b5b60405190808252806020026020018201604052801561075a5781602001602082028036833780820191505090505b5060009080519060200190610770929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161079790610d82565b60006040518083038185875af1925050503d80600081146107d4576040519150601f19603f3d011682016040523d82523d6000602084013e6107d9565b606091505b505090508061081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081490610de3565b60405180910390fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061088857610887610c7b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c6836108f6565b90506000670de0b6b3a764000085836108df9190610e03565b6108e99190610e8c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093f57600080fd5b505afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190610f4a565b5050509150506402540be4008161098e9190610fc5565b915050919050565b828054828255906000526020600020908101928215610a0f579160200282015b82811115610a0e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b6565b5b509050610a1c9190610a20565b5090565b5b80821115610a39576000816000905550600101610a21565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6d82610a42565b9050919050565b610a7d81610a62565b8114610a8857600080fd5b50565b600081359050610a9a81610a74565b92915050565b600060208284031215610ab657610ab5610a3d565b5b6000610ac484828501610a8b565b91505092915050565b6000819050919050565b610ae081610acd565b82525050565b6000602082019050610afb6000830184610ad7565b92915050565b610b0a81610a62565b82525050565b6000602082019050610b256000830184610b01565b92915050565b6000819050919050565b6000610b50610b4b610b4684610a42565b610b2b565b610a42565b9050919050565b6000610b6282610b35565b9050919050565b6000610b7482610b57565b9050919050565b610b8481610b69565b82525050565b6000602082019050610b9f6000830184610b7b565b92915050565b610bae81610acd565b8114610bb957600080fd5b50565b600081359050610bcb81610ba5565b92915050565b600060208284031215610be757610be6610a3d565b5b6000610bf584828501610bbc565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610c45601383610bfe565b9150610c5082610c0f565b602082019050919050565b60006020820190508181036000830152610c7481610c38565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce482610acd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d1757610d16610caa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d6c600083610d51565b9150610d7782610d5c565b600082019050919050565b6000610d8d82610d5f565b9150819050919050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610dcd600c83610bfe565b9150610dd882610d97565b602082019050919050565b60006020820190508181036000830152610dfc81610dc0565b9050919050565b6000610e0e82610acd565b9150610e1983610acd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5257610e51610caa565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e9782610acd565b9150610ea283610acd565b925082610eb257610eb1610e5d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610edc81610ebd565b8114610ee757600080fd5b50565b600081519050610ef981610ed3565b92915050565b6000819050919050565b610f1281610eff565b8114610f1d57600080fd5b50565b600081519050610f2f81610f09565b92915050565b600081519050610f4481610ba5565b92915050565b600080600080600060a08688031215610f6657610f65610a3d565b5b6000610f7488828901610eea565b9550506020610f8588828901610f20565b9450506040610f9688828901610f35565b9350506060610fa788828901610f35565b9250506080610fb888828901610eea565b9150509295509295909350565b6000610fd082610eff565b9150610fdb83610eff565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561101a57611019610caa565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561105757611056610caa565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561109457611093610caa565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110d1576110d0610caa565b5b82820290509291505056fea2646970667358221220628a841a98daf040306dd4f2b957e0a059c0041cda69431df808acfbe05e094564736f6c63430008080033",
  "devdoc": {
    "author": "Fernando Cardozo",
    "details": "this implemtns price feed as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "this implemtns price feed as our library"
      }
    },
    "title": "a contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "this function funds this contract"
      }
    },
    "notice": "this contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}